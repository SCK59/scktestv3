# [START cloudbuild-CI]
steps:
    # build container image.
    - name: 'gcr.io/cloud-builders/docker'
      id: Build
      args:
      - 'build'
      - '-t'
      - 'gcr.io/$PROJECT_ID/scktestv3-build:$SHORT_SHA'
      - '.'
      - '--build-arg'
      - 'COMMIT_SHA=$SHORT_SHA'
      - '--build-arg'
      - 'PORT_ARG=8080'
    
    # push image to Container Registry. PROJECT_ID and SHORT_SHA variables are automatically replaced by CloudBuild
    - name: 'gcr.io/cloud-builders/docker'
      id: Push
      args:
      - 'push'
      - 'gcr.io/$PROJECT_ID/scktestv3-build:$SHORT_SHA'
# [END cloudbuild-CI]

# [START cloudbuild-cd]
# clone env repository
    - name: 'gcr.io/cloud-builders/gcloud'
      id: Clone env repository
      entrypoint: /bin/sh
      args:
      - '-c'
      - |
        gcloud source repos clone scktestv3-env && \
        cd scktestv3-env && \
        git checkout candidate && \
        git config user.email $(gcloud auth list --filter=status:ACTIVE --format='value(account)')
    # generate new manifest
    - name: 'gcr.io/cloud-builders/gcloud'
      id: Generate manifest
      entrypoint: /bin/sh
      args:
      - '-c'
      - |
        sed "s/GOOGLE_CLOUD_PROJECT/${PROJECT_ID}/g" v3test2_k8s.yaml | \
        sed "s/COMMIT_SHA/${SHORT_SHA}/g" > scktestv3-env/v3test2_k8s.yaml
    # push manifest back to scktestv3-env
    - name: 'gcr.io/cloud-builders/gcloud'
      id: Push manifest
      entrypoint: /bin/sh
      args:
      - '-c'
      - |
        set -x && \
        cd scktestv3-env && \
        git add v3test2_k8s.yaml && \
        git commit -m "Deploying image gcr.io/${PROJECT_ID}/-build:${SHORT_SHA}
        Built from commit ${COMMIT_SHA} of repository scktestv3-repo
        Author: $(git log --format='%an <%ae>' -n 1 HEAD)" && \
        git push origin candidate
# [END cloudbuild-cd]
